name: Hotfix

on:
  push:
    branches:
      - main

jobs:
  hotfix:
    # commit message가 [hotfix]로 시작하면 실행
    if: startsWith(github.event.head_commit.message, '[hotfix]')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo sh -c 'truncate -s 0 /var/lib/docker/containers/*/*-json.log'
            cd ~/${{ secrets.REPOSITORY_NAME }}-prod
            git checkout main 
            git stash push || true
            git pull
            git stash clear || true
            sudo echo "${{ secrets.DOT_ENT_DJANGO }}" > .env-django
            sudo echo "${{ secrets.DOT_ENT_MYSQL }}" > .env-mysql
            sudo echo "${{ secrets.DOT_ENT_NEO4J }}" > .env-neo4j
            sudo echo "${{ secrets.DOT_ENT_S3 }}" > .env-s3
            sudo echo "${{ secrets.DOT_ENT_DEEPL }}" > .env-deepl
            sudo docker compose -f docker-compose.yml -f docker-compose-prod.yml -p dp up -d --build --force-recreate
            sudo docker image prune -af
